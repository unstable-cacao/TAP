Introduction:
This trait is for classes that store a collection of constants that are interchangeable or used as a bitmask (when value is integer),
e.g. class containing the possible HTTP methods.

Note: Constants in a TEnum class can be of value string or int only.

Note: TEnum methods include private constants.

Note: TEnum uses TStaticClass.


References:

getAll(): array
Return an array of all the values of the consts in the class.

class HTTPMethod 
{
    use TEnum;
    
    
    const GET   = 'get';
    const POST  = 'post';
}

HTTPMethod::getAll() will return

["get", "post"]


implodeAll(string $glue = ','): string
Return a string of all the values of the consts in the class glued with the string in the parameter $glue.

class HTTPMethod 
{
    use TEnum;
    
    
    const GET   = 'get';
    const POST  = 'post';
}

HTTPMethod::implodeAll() will return

"get,post"


isExists($value): bool
Return true if a constant with the value $value exists in the class, and false otherwise.

class HTTPMethod 
{
    use TEnum;
    
    
    const GET   = 'get';
    const POST  = 'post';
}

HTTPMethod::isExists('put') will return

false


getCount(): int
Return the count of the consts in the class.

class HTTPMethod 
{
    use TEnum;
    
    
    const GET   = 'get';
    const POST  = 'post';
}

HTTPMethod::getCount() will return

2